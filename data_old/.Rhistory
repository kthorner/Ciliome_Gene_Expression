colnames(lt_table)
colnames(elefhant_table)
colnames(scpred_table)
lt_table <- lt_table[,order(match(colnames(lt_table), colnames(elefhant_table)))]
colnames(lt_table)
elefhant_predict <- data.frame(rownames(elefhant_table), colnames(elefhant_table)[apply(elefhant_table,1,which.max)], check.names=F)
View(elefhant_predict)
library(Seurat)
DimPlot(inter_elefhant,group.by = "PredictedCelltype_UsingEnsemble")
DimPlot(inter_elefhant)
View(inter_elefhant)
elefhant_table[1,]
scpred_predict <- data.frame(rownames(scpred_table), colnames(scpred_table)[apply(scpred_table,1,which.max)], check.names=F)
lt_predict <- data.frame(rownames(lt_table), colnames(lt_table)[apply(lt_table,1,which.max)], check.names=F)
View(lt_predict)
inter_elefhant <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Inter_All/InterDataset.query.annotated.ELeFHAnt.all.rds")
inter_scpred <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Inter_All/InterDataset.query.annotated.scPred.rds")
inter_lt <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Inter_All/InterDataset.query.annotated.seuratLabelTransfer.rds")
cells_elefhant <- inter_elefhant$PredictedCelltype_UsingEnsemble
cells_scpred <- inter_scpred$scpred_no_rejection
cells_lt <- inter_lt$predicted.id
sum(cells_elefhant == cells_scpred)/length(cells_elefhant)
sum(cells_elefhant == cells_lt)/length(cells_elefhant)
sum(cells_lt == cells_scpred)/length(cells_elefhant)
rm(inter_elefhant)
rm(inter_scpred)
inter_lt <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Inter_All/InterDataset.query.annotated.seuratLabelTransfer.rds")
cells_lt <- inter_lt$predicted.id
sum(cells_elefhant == cells_lt)/length(cells_elefhant)
sum(cells_lt == cells_scpred)/length(cells_elefhant)
sum(cells_elefhant == cells_scpred)/length(cells_elefhant)
library(caret)
test <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Intra/IntraDataset.query.annotated.ELeFHAnt.rds")
test_table <- table(test$Celltypes,test$PredictedCelltype_UsingEnsemble)
filter <- rownames(test_table) %in% colnames(test_table)
test_table <- test_table[filter,]
test_table <- test_table[order(match(rownames(test_table), colnames(test_table))), ]
cf <- confusionMatrix(test_table)
cf$overall
all_predicts <- cbind(elefhant_predict$`colnames(elefhant_table)[apply(elefhant_table, 1, which.max)]`,scpred_predict$`colnames(scpred_table)[apply(scpred_table, 1, which.max)]`,lt_predict$`colnames(lt_table)[apply(lt_table, 1, which.max)]`)
all_predicts <- as.data.frame(all_predicts)
colnames(all_predicts) <- c("ELeFHAnt","scPred","Seurat Label Transfer")
View(all_predicts)
test <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Intra/IntraDataset.query.annotated.scPred.rds")
test_table <- table(test$Celltypes,test$scpred_no_rejection)
filter <- rownames(test_table) %in% colnames(test_table)
test_table <- test_table[filter,]
test_table <- test_table[order(match(rownames(test_table), colnames(test_table))), ]
cf <- confusionMatrix(test_table)
cf$overall
test <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Intra/IntraDataset.query.annotated.seuratLabelTransfer.rds")
test_table <- table(test$Celltypes,test$predicted.id)
filter <- rownames(test_table) %in% colnames(test_table)
test_table <- test_table[filter,]
test_table <- test_table[order(match(rownames(test_table), colnames(test_table))), ]
cf <- confusionMatrix(test_table)
cf$overall
rm(test)
lt_table <- table(inter_lt$seurat_clusters,inter_lt$predicted.id)
rm(inter_lt)
inter_elefhant <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Inter_All/InterDataset.query.annotated.ELeFHAnt.all.rds")
inter_scpred <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Inter_All/InterDataset.query.annotated.scPred.rds")
elefhant_table <- table(inter_elefhant$seurat_clusters,inter_elefhant$PredictedCelltype_UsingEnsemble)
scpred_table <- table(inter_scpred$seurat_clusters,inter_scpred$scpred_no_rejection)
elefhant_predict <- data.frame(rownames(elefhant_table), colnames(elefhant_table)[apply(elefhant_table,1,which.max)], check.names=F)
scpred_predict <- data.frame(rownames(scpred_table), colnames(scpred_table)[apply(scpred_table,1,which.max)], check.names=F)
lt_predict <- data.frame(rownames(lt_table), colnames(lt_table)[apply(lt_table,1,which.max)], check.names=F)
all_predicts_2 <- cbind(elefhant_predict$`colnames(elefhant_table)[apply(elefhant_table, 1, which.max)]`,scpred_predict$`colnames(scpred_table)[apply(scpred_table, 1, which.max)]`,lt_predict$`colnames(lt_table)[apply(lt_table, 1, which.max)]`)
all_predicts_2 <- as.data.frame(all_predicts_2)
colnames(all_predicts_2) <- c("ELeFHAnt","scPred","Seurat Label Transfer")
View(all_predicts_2)
rm(inter_elefhant)
rm(inter_scpred)
reference <- readRDS("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/elefhant/liver_lotto_human.rds")
View(reference)
citation(randomForest)
library(randomForest)
install.packages("randomForest")
citation(randomForest)
library(randomForest)
citation(randomForest)
citation("randomForest")
load('Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/GutData_duojejunum.Robj')
DefaultAssay(GutData_duojejunum) <- "RNA"
library(Seurat)
library(SeuratData)
library(SeuratDisk)
DefaultAssay(GutData_duojejunum) <- "RNA"
GutData_duojejunum$Celltypes <- GutData_duojejunum$cell_name_detailed
Idents(GutData_duojejunum) <- "Celltypes"
GutData_duojejunum.subset = subset(GutData_duojejunum, downsample = 100)
GutData_duojejunum.subset[['Celltypes']] <- lapply(GutData_duojejunum.subset[['Celltypes']], as.character)
GutData_duojejunum.subset = DietSeurat(GutData_duojejunum.subset,counts=T,data=T,scale.data = F)
SaveH5Seurat(GutData_duojejunum.subset, filename = "GutData_new.h5Seurat")
Convert("GutData_new.h5Seurat", dest = "h5ad")
rm(list=ls())
load('Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/fetal_jason_intestine.Robj')
DefaultAssay(fetal_jason_intestine) <- "RNA"
fetal_jason_intestine$Celltypes <- fetal_jason_intestine$Cell_type
Idents(fetal_jason_intestine) <- "Celltypes"
fetal_jason_intestine.subset = subset(fetal_jason_intestine, downsample = 100)
fetal_jason_intestine.subset[['Celltypes']] <- lapply(fetal_jason_intestine.subset[['Celltypes']], as.character)
View(fetal_jason_intestine.subset)
fetal_jason_intestine.subset[['seurat_clusters']] <- lapply(fetal_jason_intestine.subset[['seurat_clusters']], as.character)
fetal_jason_intestine.subset = DietSeurat(fetal_jason_intestine.subset,counts=T,data=T,scale.data = F)
SaveH5Seurat(fetal_jason_intestine.subset, filename = "fetal_jason_new.h5Seurat")
Convert("fetal_jason_new.h5Seurat", dest = "h5ad")
getwd()
library(shiny)
runApp("Y:/Konrad/Shiny")
install.packages(shinywidgets)
install.packages(shinyWidgets)
install.packages("shinyWidgets")
runApp("Y:/Konrad/Shiny")
library(shiny)
runApp("Y:/Konrad/Shiny")
library(shiny)
runApp("Y:/Konrad/Shiny")
runApp("C:/Users/THOQ4R/Documents/elefhant_shiny")
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
runApp('elefhant_shiny')
?hclust
hclust()
test <- read.table("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Hyperparameters/RF_ntrees_stats.rds")
test <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Hyperparameters/RF_ntrees_stats.rds")
View(test)
test <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Hyperparameters/SVM_cost_stats.rds")
library(Seurat)
load("V:/10X Data/NewData_snRNA_06-07-2021/10X-Helmrath-14-238A-20210416-3v3-1hg/10X-Helmrath-14-238A-20210416-3v3-1hg_SoupX.Robj")
library(Seurat)
library(ggplot2)
load('Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/GutData_duojejunum.Robj')
p1 = DimPlot(GutData_duojejunum,group.by="cell_name_detailed", label=T, repel = T, reduction = "umap", pt.size=1, label.size=5) + NoLegend() + ggtitle("Reference Cell Types") + theme(plot.title = element_text(size = 18, face = "bold"))
p1
View(p1)
p1$labels
p1$data[[1]]$fill
p1$data[[1]]["fill"]
p1_built <- ggplot_build(p1)
colors <- p1_built$data$colour
colors <- p1_built$data
colors <- p1_built$data[[1]]$colour
labels <- p1_built$data[[2]]$label
labels <- as.list(p1_built$data[[2]]$label)
View(labels)
unique(p1_built$data[[1]]$group)
labels <- p1_built$data[[2]]$label
labels
groups <- p1_built$data[[1]]$group
test<- table(colors,groups)
test
idents <- unique(GutData_duojejunum$cell_name_detailed)
idents
table$row.names
row.names(test)
matches <- table(colors,groups)
results <- apply(matches,1,function(x) colnames(matches)[which.max(x)])
results
rm(GutData_duojejunum)
results <- as.numeric(results)
results <- apply(matches,1,function(x) colnames(matches)[which.max(x)])
results_colors <- names(results)
results_groups <- as.numeric(results)
results_labels <- labels[results_groups]
results_labels
results_groups
results_labels <- as.vector(labels[results_groups])
results_colors
keishi <- read.table("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/elefhant/ELeFHAnt_Annotation/D4-D7_Keishi_ClusterMarkers.txt",sep="\t")
View(keishi)
library(caret)
library(Seurat)
library(mltest)
library(yardstick)
fix_cf <- function(confuse) {
rows <- rownames(confuse)
cols <- colnames(confuse)
missing_cols <- rows[!(rows %in% cols)]
missing_rows <- cols[!(cols %in% rows)]
for (x in missing_cols){
new_col <- rep(0,nrow(confuse))
confuse <- cbind(confuse,new_col)
}
for (x in missing_rows){
new_row <- rep(0,ncol(confuse))
confuse <- rbind(confuse,new_row)
}
colnames(confuse) <- c(cols,missing_cols)
rownames(confuse) <- c(rows,missing_rows)
confuse <- confuse[order(match(rownames(confuse), colnames(confuse))), ]
return (confuse)
}
options(warn=-1)
options(warn=0)
test <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Intra/IntraDataset.query.annotated.ELeFHAnt.rds")
test_table <- table(test$PredictedCelltype_UsingEnsemble,test$Celltypes)
test_table <- fix_cf(test_table)
f_meas(test_table,estimator = "macro")
f_meas(test_table,estimator = "macro_weighted")
f_meas(test_table,estimator = "micro")
accuracy(test_table)
test2 <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Intra/IntraDataset.query.annotated.scPred.rds")
#test_table_2 <- table(test2$Celltypes,test2$scpred_no_rejection)
test_table_2 <- table(test2$scpred_prediction,test2$Celltypes)
test_table_2 <- fix_cf(test_table_2)
f_meas(test_table_2,estimator = "macro")
f_meas(test_table_2,estimator = "macro_weighted")
f_meas(test_table_2,estimator = "micro")
accuracy(test_table_2)
test3 <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Benmarking_ELeFHAnt/Benchmarking_Intra/IntraDataset.query.annotated.seuratLabelTransfer.rds")
test_table_3 <- table(test3$predicted.id,test3$Celltypes)
test_table_3 <- fix_cf(test_table_3)
f_meas(test_table_3,estimator = "macro")
f_meas(test_table_3,estimator = "macro_weighted")
f_meas(test_table_3,estimator = "micro")
accuracy(test_table_3)
cf <- read.table("Y:/Konrad/elefhant/final_test/relationship_ensemble/ConfusionMatrix_EnsembleLearning.txt",sep="\t",check.names = F)
row_order <- hclust(dist(cf))$order
col_order <- hclust(dist(t(cf)))$order
cf <- cf[match(rownames(cf)[row_order], rownames(cf)),match(colnames(cf)[col_order], colnames(cf))]
cf_norm <- round(cf/apply(cf,1,max),3)
cf_df <- as.data.frame(cf_norm)
View(cf_df)
cf_df <- as.data.frame(as.table(as.matrix(cf_norm)))
colnames(cf_df) <- c("reference2","reference1","Relative_Similarity")
plot = ggplot(data = cf_df, aes(x=reference2, y=reference1, fill=Relative_Similarity)) + geom_tile() + scale_fill_gradientn(colors = c("blue", "white", "red")) + theme(axis.text.x = element_text(angle = 90),axis.text=element_text(size=14),axis.title=element_text(size=18),legend.title=element_text(size=14),legend.text=element_text(size=12))
library(ggplot2)
plot = ggplot(data = cf_df, aes(x=reference2, y=reference1, fill=Relative_Similarity)) + geom_tile() + scale_fill_gradientn(colors = c("blue", "white", "red")) + theme(axis.text.x = element_text(angle = 90),axis.text=element_text(size=14),axis.title=element_text(size=18),legend.title=element_text(size=14),legend.text=element_text(size=12))
plot
ggsave("heatmap.png", width = 10, height = 10)
getwd()
library(Seurat)
seurat.object <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Trajectory/Integration.atlas.snRNA.4timepoints.ELeFHAnt.10-08-2021.rds")
colnames(seurat.object@meta.data)
table(seurat.object$orig.ident)
table(seurat.object$Timepoint)
table(seurat.object$Dataset)
table(seurat.object$Celltypes)
table(seurat.object$PredictedCelltype_UsingEnsemble)
table(seurat.object$PredictedCelltype_UsingSVM)
table(seurat.object$HarmonizedLabels_UsingEnsemble)
table(seurat.object$Phase)
rm(list=ls())
library(Seurat)
seurat.object <- readRDS("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/elefhant/MouseNatureComm_plus_LiverLotto.integrated.Human.Hybrid.Endo.rds")
seurat.object <- readRDS("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/elefhant/FeaturePlots/MouseNatureComm_plus_LiverLotto.integrated.Human.Hybrid.Endo.rds")
"HHEX" %in% rownames(seurat.object)
rm(list=ls())
seurat.object <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Annotate_snRNA_Datasets_usingELeFHAntDev_usingHarmonizedAtlas_Ensemble/Integration.atlas.snRNA.4timepoints.ELeFHAnt.10-08-2021.rds")
seurat.object <- readRDS("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Annotate_snRNA_Datasets_usingELeFHAntDev_usingHarmonizedAtlas_Ensemble/Integration.atlas.snRNA.4timepoints.ELeFHAnt.10-08-2021.rds")
markers <- read.csv("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Trajectory/snRNA_4timepoints_markers.csv")
View(markers)
library(dplyr)
markrs %>% group_by("cluster")
markers %>% group_by("cluster")
markers_new <- markrs %>% group_by("cluster")
markers_new <- markers %>% group_by("cluster")
View(markers_new)
markers_new <- markers %>% group_by(cluster)
markers_new <- markers %>% group_by(cluster) %>% distinct(gene,.keep_all=T)
sum(duplicated(markers$gene))
markers <- as.data.frame(markers)
markers_new <- markers %>% group_by(cluster) %>% distinct(gene,.keep_all=T)
markers_new <- markers %>% distinct(gene,.keep_all=T)
markers_final <- markers_new[abs(markers_new$avg_log2FC) >= 0.5,]
View(markers_final)
length(unique(markers$cluster))
markers_final <- markers_new[abs(markers_new$avg_log2FC) >= 1,]
length(unique(markers_final$cluster))
markers_final <- markers_new[abs(markers_new$avg_log2FC) >= 0.5,]
length(unique(markers_final$cluster))
write.table(markers_final, "snRNA_4timepoints_markers_unique.csv", sep = ',', row.names = F, col.names = T, quote = F)
write.table(markers_final, "Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Trajectory//snRNA_4timepoints_markers_unique.csv", sep = ',', row.names = F, col.names = T, quote = F)
rm(list=ls())
markers <- read.csv("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Trajectory/snRNA_4timepoints_projected_markers.csv")
length(unique(markers$cluster))
markers_new <- markers %>% group_by(cluster) %>% distinct(gene,.keep_all=T)
markers_new <- markers %>% distinct(gene,.keep_all=T)
markers_final <- markers_new[abs(markers_new$avg_log2FC) >= 0.5,]
length(unique(markers$cluster))
View(markers_final)
write.table(markers_final, "Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Trajectory//snRNA_4timepoints_markers_projected_unique.csv", sep = ',', row.names = F, col.names = T, quote = F)
seurat.object <- readRDS("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/elefhant/FeaturePlots/MouseNatureComm_plus_LiverLotto.integrated.Mouse.endo.rds")
View(seurat.object)
results <- read.csv("Y:/Konrad/Gut_Akaljot_1-25-2021/Integration_FetalTI_GutCell_JasonSpence/Trajectory/Integration_atlas_celltype_markers_final_50.csv",header=T)
table(results$cluster)
source("https://bioconductor.org/biocLite.R")
## biocLite("BiocUpgrade") ## you may need this
biocLite("clusterProfiler")
BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(enrichplot)
library(org.Hs.eg.db)
gene_lists <- data.frame(c("CD3","CD4","cD19"),c("SOX2","CDX2","PROX1"))
colnames(gene_lists) <- c("list1","list2")
View(gene_lists)
gene_lists <- data.frame(c("CD3","CD4","CD19"),c("SOX2","CDX2","PROX1"))
colnames(gene_lists) <- c("list1","list2")
cluster <- compareCluster(geneClusters = gene_lists, fun = "enrichGO", keyType = "SYMBOL", org = org.Hs.eg.db)
cluster <- compareCluster(geneClusters = gene_lists, fun = "enrichGO", keyType = "SYMBOL", org = "org.Hs.eg.db")
cluster <- compareCluster(geneClusters = gene_lists, fun = "enrichGO")
cluster <- compareCluster(geneClusters = gene_lists, fun = "enrichGO", keyType = "SYMBOL", orgDb = "org.Hs.eg.db")
cluster <- compareCluster(geneClusters = gene_lists, fun = "enrichGO", keyType = "SYMBOL", OrgDb = "org.Hs.eg.db")
View(cluster)
results <- cluster[[1]]
results <- cluster$compareClusterResult
results <- cluster@compareClusterResult
View(results)
View(cluster)
dotplot(cluster)
dotplot(cluster)
gene_lists <- data.frame(c("CD3","CD4","CD19","CCR2"),c("SOX2","CDX2","PROX1","CD38"))
colnames(gene_lists) <- c("list1","list2")
cluster <- compareCluster(geneClusters = gene_lists, fun = "enrichGO", keyType = "SYMBOL", OrgDb = "org.Hs.eg.db")
dotplot(cluster)
gene_lists <- data.frame(c("CD3","CD4","CD19","CCR2","SOX1"),c("SOX2","CDX2","PROX1","CD38","CD8"))
colnames(gene_lists) <- c("list1","list2")
cluster <- compareCluster(geneClusters = gene_lists, fun = "enrichGO", keyType = "SYMBOL", OrgDb = "org.Hs.eg.db")
dotplot(cluster)
dotplot(cluster)
expr <- readRDS("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/Milo/gene_count_sampled.RDS")
library(AnnotationDbi)
library(org.Hs.eg.db)
ensembl_list <- gsub("\\..*","",rownames(expr))
ensembl_list[1:5]
symbol_list <- mapIds(org.Hs.eg.db,
keys=ensembl_list,
column="SYMBOL",
keytype="ENSEMBL",
multiVals="first")
length(unique(symbol_list))
symbol_list[1:10]
sum(is.na(symbol_list))
29031 + 33212
symbol_list_2 <- symbol_list[!is.na(symbol_list)]
symbol_list_2[1:10]
length(unique(symbol_list_2))
symbol_list_3 <- symbol_list_2[!duplicated(symbol_list_2)]
ensembl_list <- gsub("\\..*","",rownames(expr))
symbol_list <- mapIds(org.Hs.eg.db,
keys=ensembl_list,
column="SYMBOL",
keytype="ENSEMBL",
multiVals="first")
filter <- !is.na(symbol_list)
symbol_list <- symbol_list[filter]
expr <- expr[filter,]
filter <- !duplicated(symbol_list)
symbol_list <- symbol_list[filter]
expr <- expr[filter,]
symbol_list[1:5]
rownames(expr)[1:5]
rownames(expr) <- unnamed(symbol_list)
rownames(expr) <- unname(symbol_list)
rownames(expr)[1:5]
rm(list=ls())
library(Seurat)
seurat.object <- readRDS("Y:/Konrad/Other/10X-Helmrath-262B-20210406-3v3-1hg_SoupX_CelltypeAnnotation_usingELeFHAnt.rds")
View(seurat.object)
rm(list=ls())
library(loomR)
library(SeuratDisk)
loom_8.5 <- connect(filename = "Y:/Konrad/Cellrank/Results/E8.5_AllCells.loom", mode = "r+")
loom_8.5 <- connect(filename = "Y:/Konrad/Cellrank/Results/E8.5_AllCells.loom", mode = "r+",skip.validate = TRUE)
loom_8.5
seruat_8.5 <- as.Seurat(loom_8.5)
seurat_8.5 <- as.Seurat(loom_8.5)
library(devtools)
install_local("C:/Users/THOQ4R/Desktop/seurat-wrappers-master.zip")
library(SeuratWrappers)
ldata <- ReadVelocity(loom_8.5)
install_local("C:/Users/THOQ4R/Desktop/velocyto.R-master.zip")
BiocManager::install("pcaMethods")
install_local("C:/Users/THOQ4R/Desktop/velocyto.R-master.zip")
ldata <- ReadVelocity(loom_8.5)
install_local("C:/Users/THOQ4R/Desktop/velocyto.R-master.zip")
library(Seurat)
seurat.object <- readRDS("Y:/Konrad/Dan_Wells_12.1.2021/Comparison/hAGO_seurat.processed.09-28-2021.rds")
colnames(seurat.object@meta.data)
table(seurat.object$Celltypes)
DimPlot(seurat.object,group.by = "Celltypes")
DimPlot(seurat.object,group.by = "Celltypes") + NoLegend()
rm(list=ls())
seurat.object <- readRDS("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/Mesenchyme_Alice/Cao_Mesenchyme_processed.rds")
colnames(seurat.object@meta.data)
table(seurat.object$Organ)
table(seurat.object$Celltypes)
table(seurat.object$Organ,seurat.object$Celltypes)
p1=DimPlot(spence_messenchyme, group.by = "Celltypes", label = T, repel = T, label.size = 6,pt.size=2) + NoLegend()
p2=DimPlot(spence_messenchyme, group.by = "Organ", label = T, repel = T, label.size = 6,pt.size=2)
p1+p2
p1=DimPlot(seurat_object, group.by = "Celltypes", label = T, repel = T, label.size = 6,pt.size=2) + NoLegend()
p2=DimPlot(seurat_object, group.by = "Organ", label = T, repel = T, label.size = 6,pt.size=2)
p1+p2
p1=DimPlot(seurat.object, group.by = "Celltypes", label = T, repel = T, label.size = 6,pt.size=2) + NoLegend()
p2=DimPlot(seurat.object, group.by = "Organ", label = T, repel = T, label.size = 6,pt.size=2)
p1+p2
p1=DimPlot(seurat_object, group.by = "Celltypes", label = T, repel = T, label.size = 6,pt.size=1) + NoLegend()
p2=DimPlot(seurat_object, group.by = "Organ", label = T, repel = T, label.size = 6,pt.size=1)
p1+p2
getwd()
setwd("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/Mesenchyme_Alice")
ggsave('Cao_Mesenchyme_Celltypes_plus_Organs_new.png', width = 20, height = 20, dpi = 800)
library(ggplot2)
ggsave('Cao_Mesenchyme_Celltypes_plus_Organs_new.png', width = 20, height = 20, dpi = 800)
table(seurat.object$Organ,seurat.object$Celltypes)
colnames(seurat.object@meta.data)
table(seurat.object$Development_day)
meta <- as.data.frame(read.table("Y:/Konrad/Cellrank/ResultsMetaFile_AllCells_E8.5_E9.0_E9.5_Final.txt",sep="\t",header=T,row.names=1,check.names=F))
meta <- as.data.frame(read.table("Y:/Konrad/Cellrank/Results/MetaFile_AllCells_E8.5_E9.0_E9.5_Final.txt",sep="\t",header=T,row.names=1,check.names=F))
View(meta)
table(meta$Stages,meta$LineageAnnotations)
rm(list=ls())
seurat.object <- readRDS("Y:/Konrad/Aaron_Taka_scRNA_01-14-2021/Mesenchyme_Alice/cao_mesenchyme.rds")
table(seurat.object$Celltypes,seurat.object$Organ)
library(shiny)
library(shinyWidgets)
rm(list=ls())
runApp("Y:/Konrad/Shiny")
runApp("Y:/Konrad/Shiny")
library(readxl)
setwd("Y:/Konrad/Shiny_Sam/data")
table_1 <- read_excel("Supplemental File 1_Custom Ciliome 11.17.21.xlsx",skip=7)
View(table_1)
table_7 <- read_excel("Supplemental File 7_scRNAseq Ciliary Genes with Expression Changes 12.6.21.xlsx",skip=6)
View(table_7)
table_3 <- read_excel("Supplemental File 3_DE ciliome by tissue.xlsx",skip=5)
View(table_3)
library(DT)
runApp("Y:/Konrad/Shiny")
runApp("Y:/Konrad/Shiny")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
runApp("Y:/Konrad/Shiny_Sam")
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
require("shiny")
if (!require("abbyyR")) install.packages("abbyyR", repos="http://cran.us.r-project.org")
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
test <- table3$`Gene symbol`
test <- table_3$`Gene Symbol`
test2 <- grep("^[A].*",test)
test2
test2 <- grep("PARK",test)
test2
test2 <- grep("CC",test)
test <- "Konrad"
test2 <- substr(test,3,-1)
test2 <- substr(test,3,5)
test2 <- substr(test,3)
test2 <- substr(test,3,length(test))
length(test)
test2 <- substr(test,3,nchar(test))
library(shiny)
runGitHub("Ciliome_Gene_Expression", "kthorner", launch.browser = TRUE)
seurat.object <- readRDS("Y:/Konrad/Masaki_HLO/seurat_objects/d6_pfg_soupx.rds")
old_names <- colnames(seurat.object)
test_seurat_object <- seurat.object
colnames(seurat.object) <- old_names
RenameCells(test_seurat_object,old_names)
old_names <- paste0(old_names,"KONRAD")
old_names[1:5]
test_seurat_object <- RenameCells(test_seurat_object,old_names)
colnames(test_seurat_object)[1:5]
test_seurat_object <- RenameCells(test_seurat_object,new.names=old_names)
colnames(test_seurat_object)[1:5]
